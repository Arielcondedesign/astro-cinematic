---
import LogoJetee from '../images/LogoJetee.astro';
import { useI18n } from '../../utils/i18n';
const { lang = 'fr' } = Astro.params;
const { t, translatePath } = useI18n(lang);

const links = [
  {
    ref: '01',
    name: t('nav.home'),
    href: translatePath('/'),
  },
  {
    ref: '02',
    name: t('nav.about'),
    href: translatePath('/apropos'),
  },
  {
    ref: '03',
    name: t('nav.films'),
    href: translatePath('/films'),
    submenu: [
      {
        ref: '03-01',
        name: t('nav.longMetrages'),
        href: translatePath('/doculongs'),
      },
      {
        ref: '03-02',
        name: t('nav.courtMetrages'),
        href: translatePath('/docucourts'),
      },
    ],
  },
  {
    ref: '04',
    name: t('nav.installations'),
    href: translatePath('/installations'),
  },
  {
    ref: '05',
    name: t('nav.contact'),
    href: translatePath('/contact'),
  },
];

const languages = [
  { code: 'fr', name: 'Français' },
  { code: 'en', name: 'English' },
  { code: 'es', name: 'Español' }
];

const currentLang = languages.find(l => l.code === lang) || languages[0];
---

<header
  x-data="{ open: false, dropdownOpen: false, langOpen: false }"
  class="transition bg-primary-950"
>
  <div
    class="mx-auto flex max-w-2xl items-center justify-between px-4 py-4 sm:px-6 sm:py-6 lg:max-w-7xl lg:px-8"
  >
    <!-- Brand logo -->
    <div class="flex">
      <a
        href="/"
        class="focus-visible:outline-primary-200 rounded-md focus-visible:outline focus-visible:outline-2"
      >
        <LogoJetee 
          isHeader={true}
          class="h-10 w-auto sm:h-6 md:h-8 transition-all duration-200" 
        />
      </a>
    </div>

    <!-- Actions -->
    <div class="-mr-2 flex items-center space-x-2 sm:space-x-3">
      <!-- Toggle menu -->
      <button
        type="button"
        class="text-primary-200 hover:bg-primary-400/10 ring-primary-200 inline-flex h-14 w-14 items-center justify-center rounded-full transition focus:outline-none focus-visible:ring-2"
        @click="open = !open"
        @mousedown="if (open) $event.preventDefault()"
        aria-controls="website-menu"
        aria-expanded="false"
        :aria-expanded="open.toString()"
      >
        <span class="sr-only">Toggle menu</span>
        <svg
          x-cloak
          class="h-8 w-8"
          :class="{ 'hidden': open, 'block': !(open) }"
          xmlns="http://www.w3.org/2000/svg"
          fill="currentColor"
          viewBox="0 0 24 24"
          aria-hidden="true"
        >
          <path d="M19 8H5V10H19V8ZM19 14H5V16H19V14Z"></path>
        </svg>
        <svg
          x-cloak
          class="h-8 w-8"
          :class="{ 'block': open, 'hidden': !(open) }"
          xmlns="http://www.w3.org/2000/svg"
          fill="currentColor"
          viewBox="0 0 24 24"
          aria-hidden="true"
        >
          <path
            d="M12.0007 10.5865L16.9504 5.63672L18.3646 7.05093L13.4149 12.0007L18.3646 16.9504L16.9504 18.3646L12.0007 13.4149L7.05093 18.3646L5.63672 16.9504L10.5865 12.0007L5.63672 7.05093L7.05093 5.63672L12.0007 10.5865Z"
          ></path>
        </svg>
      </button>

      <!-- Language selector -->
      <div class="relative" x-data="{ langOpen: false }">
        <button
          type="button"
          @click="langOpen = !langOpen"
          @click.away="langOpen = false"
          class="text-primary-200 hover:bg-primary-800 inline-flex h-14 items-center justify-center rounded-full px-4 transition focus:outline-none"
          aria-label="Select language"
        >
          <span class="flex items-center gap-2">
            <svg
            class="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 017.843 4.582M12 3a8.997 8.997 0 00-7.843 4.582m15.686 0A11.953 11.953 0 0112 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0121 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0112 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 013 12c0-1.605.42-3.113 1.157-4.418"
            />
          </svg>
            <span class="text-sm font-medium">{currentLang.code.toUpperCase()}</span>
          </span>
        </button>
        <!-- Desktop language dropdown -->
        <div
          x-show="langOpen"
          x-transition:enter="transition ease-out duration-100"
          x-transition:enter-start="transform opacity-0 scale-95"
          x-transition:enter-end="transform opacity-100 scale-100"
          x-transition:leave="transition ease-in duration-75"
          x-transition:leave-start="transform opacity-100 scale-100"
          x-transition:leave-end="transform opacity-0 scale-95"
          class="absolute right-0 mt-2 w-48 origin-top-right rounded-xl bg-primary-900 py-2 shadow-lg ring-1 ring-primary-200/10"
          role="menu"
        >
          {
            languages.map((lang) => (
              <a
                href={translatePath('/', lang.code)}
                class:list={[
                  'block px-4 py-2 text-sm transition-colors hover:bg-primary-800',
                  {
                    'text-primary-200 font-medium': currentLang.code === lang.code,
                    'text-primary-400': currentLang.code !== lang.code,
                  },
                ]}
                role="menuitem"
              >
                <div class="flex items-center gap-2">
                  {currentLang.code === lang.code && (
                    <svg
                      class="h-4 w-4"
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 24 24"
                      fill="currentColor"
                    >
                      <path d="M10.0007 15.1709L19.1931 5.97852L20.6073 7.39273L10.0007 17.9993L3.63672 11.6354L5.05093 10.2212L10.0007 15.1709Z" />
                    </svg>
                  )}
                  <span>{lang.name}</span>
                </div>
              </a>
            ))
          }
        </div>
      </div>
    </div>
  </div>

  <!-- Menu content -->
  <div
    class="mx-auto max-w-2xl px-4 sm:px-6 lg:max-w-7xl lg:px-8"
    id="website-menu"
    x-cloak
    x-show="open"
    x-collapse
    x-collapse.duration.500ms
  >
    <div class="grid grid-cols-1 gap-8 pb-16 pt-6 lg:grid-cols-2 lg:pt-12">
      <div
        class="bg-primary-500/10 hidden items-center justify-center rounded-3xl px-6 py-8 lg:flex"
      >
        <p
          class="text-primary-200/70 max-w-sm text-xl italic leading-loose"
        >
          <span class="font-medium"></span> "Tant que tu n'atteins pas la vérité, tu ne peux la corriger. Donc, si tu ne peux la corriger, tu ne pourras jamais l'atteindre. En attendant, ne te résigne pas."
          <br>
          — José Saramago.
        </p>
      </div>

      <!-- Navigation -->
      <nav class="divide-primary-300/10 flex flex-col gap-1 divide-y">
        {
          links.map((link) => (
            <div class="py-4 sm:py-6" x-data="{ isOpen: false }">
              <div class="flex items-center justify-between">
                <a
                  href={link.href}
                  class:list={[
                    "text-primary-200 group inline-flex text-2xl font-medium tracking-tight transition focus-visible:outline-none sm:text-3xl",
                    { "w-full": !link.submenu }
                  ]}
                >
                  <div class="group-focus-visible:outline-primary-200 flex items-center gap-6 rounded-3xl group-focus-visible:outline group-focus-visible:outline-2 group-focus-visible:outline-offset-2">
                    <span class="text-xs">{link.ref}</span>
                    <span class="group-hover:underline">{link.name}</span>
                  </div>
                </a>
                {link.submenu && (
                  <button
                    @click="isOpen = !isOpen"
                    class="text-primary-400 hover:text-primary-200 p-2 transition-colors"
                    :aria-expanded="isOpen"
                  >
                    <svg
                      class="h-6 w-6 transform transition-transform"
                      :class="{ 'rotate-180': isOpen }"
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 24 24"
                      fill="currentColor"
                    >
                      <path d="M11.9997 13.1714L16.9495 8.22168L18.3637 9.63589L11.9997 15.9999L5.63574 9.63589L7.04996 8.22168L11.9997 13.1714Z" />
                    </svg>
                  </button>
                )}
              </div>
              
              {link.submenu && (
                <div
                  x-show="isOpen"
                  x-collapse
                  x-collapse.duration.300ms
                  class="mt-4 space-y-2 pl-12"
                >
                  {link.submenu.map((subLink) => (
                    <a
                      href={subLink.href}
                      class="text-primary-200 group flex items-center gap-6 py-2 text-xl font-medium tracking-tight transition hover:text-primary-50 focus-visible:outline-none sm:text-2xl"
                    >
                      <span class="text-xs opacity-70">{subLink.ref}</span>
                      <span class="group-hover:underline">{subLink.name}</span>
                    </a>
                  ))}
                </div>
              )}
            </div>
          ))
        }
      </nav>
    </div>
  </div>
</header>